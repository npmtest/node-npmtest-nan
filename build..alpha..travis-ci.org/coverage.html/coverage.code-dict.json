{"/home/travis/build/npmtest/node-npmtest-nan/test.js":"/* istanbul instrument in package npmtest_nan */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-nan/lib.npmtest_nan.js":"/* istanbul instrument in package npmtest_nan */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_nan = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_nan = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-nan/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-nan && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_nan */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_nan\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_nan.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_nan.rollup.js'] =\n            local.assetsDict['/assets.npmtest_nan.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_nan.__dirname + '/lib.npmtest_nan.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-nan/node_modules/nan/include_dirs.js":"console.log(require('path').relative('.', __dirname));\n","/home/travis/build/npmtest/node-npmtest-nan/node_modules/nan/tools/1to2.js":"#!/usr/bin/env node\n/*********************************************************************\n * NAN - Native Abstractions for Node.js\n *\n * Copyright (c) 2017 NAN contributors\n *\n * MIT License <https://github.com/nodejs/nan/blob/master/LICENSE.md>\n ********************************************************************/\n\nvar commander = require('commander'),\n    fs = require('fs'),\n    glob = require('glob'),\n    groups = [],\n    total = 0,\n    warning1 = '/* ERROR: Rewrite using Buffer */\\n',\n    warning2 = '\\\\/\\\\* ERROR\\\\: Rewrite using Buffer \\\\*\\\\/\\\\n',\n    length,\n    i;\n\nfs.readFile(__dirname + '/package.json', 'utf8', function (err, data) {\n  if (err) {\n    throw err;\n  }\n\n  commander\n      .version(JSON.parse(data).version)\n      .usage('[options] <file ...>')\n      .parse(process.argv);\n\n  if (!process.argv.slice(2).length) {\n    commander.outputHelp();\n  }\n});\n\n/* construct strings representing regular expressions\n   each expression contains a unique group allowing for identification of the match\n   the index of this key group, relative to the regular expression in question,\n    is indicated by the first array member */\n\n/* simple substistutions, key group is the entire match, 0 */\ngroups.push([0, [\n  '_NAN_',\n  'NODE_SET_METHOD',\n  'NODE_SET_PROTOTYPE_METHOD',\n  'NanAsciiString',\n  'NanEscapeScope',\n  'NanReturnValue',\n  'NanUcs2String'].join('|')]);\n\n/* substitutions of parameterless macros, key group is 1 */\ngroups.push([1, ['(', [\n  'NanEscapableScope',\n  'NanReturnNull',\n  'NanReturnUndefined',\n  'NanScope'].join('|'), ')\\\\(\\\\)'].join('')]);\n\n/* replace TryCatch with NanTryCatch once, gobbling possible namespace, key group 2 */\ngroups.push([2, '(?:(?:v8\\\\:\\\\:)?|(Nan)?)(TryCatch)']);\n\n/* NanNew(\"string\") will likely not fail a ToLocalChecked(), key group 1 */ \ngroups.push([1, ['(NanNew)', '(\\\\(\"[^\\\\\"]*\"[^\\\\)]*\\\\))(?!\\\\.ToLocalChecked\\\\(\\\\))'].join('')]);\n\n/* Removed v8 APIs, warn that the code needs rewriting using node::Buffer, key group 2 */\ngroups.push([2, ['(', warning2, ')?', '^.*?(', [\n      'GetIndexedPropertiesExternalArrayDataLength',\n      'GetIndexedPropertiesExternalArrayData',\n      'GetIndexedPropertiesExternalArrayDataType',\n      'GetIndexedPropertiesPixelData',\n      'GetIndexedPropertiesPixelDataLength',\n      'HasIndexedPropertiesInExternalArrayData',\n      'HasIndexedPropertiesInPixelData',\n      'SetIndexedPropertiesToExternalArrayData',\n      'SetIndexedPropertiesToPixelData'].join('|'), ')'].join('')]);\n\n/* No need for NanScope in V8-exposed methods, key group 2 */\ngroups.push([2, ['((', [\n      'NAN_METHOD',\n      'NAN_GETTER',\n      'NAN_SETTER',\n      'NAN_PROPERTY_GETTER',\n      'NAN_PROPERTY_SETTER',\n      'NAN_PROPERTY_ENUMERATOR',\n      'NAN_PROPERTY_DELETER',\n      'NAN_PROPERTY_QUERY',\n      'NAN_INDEX_GETTER',\n      'NAN_INDEX_SETTER',\n      'NAN_INDEX_ENUMERATOR',\n      'NAN_INDEX_DELETER',\n      'NAN_INDEX_QUERY'].join('|'), ')\\\\([^\\\\)]*\\\\)\\\\s*\\\\{)\\\\s*NanScope\\\\(\\\\)\\\\s*;'].join('')]);\n\n/* v8::Value::ToXXXXXXX returns v8::MaybeLocal<T>, key group 3 */\ngroups.push([3, ['([\\\\s\\\\(\\\\)])([^\\\\s\\\\(\\\\)]+)->(', [\n      'Boolean',\n      'Number',\n      'String',\n      'Object',\n      'Integer',\n      'Uint32',\n      'Int32'].join('|'), ')\\\\('].join('')]);\n\n/* v8::Value::XXXXXXXValue returns v8::Maybe<T>, key group 3 */\ngroups.push([3, ['([\\\\s\\\\(\\\\)])([^\\\\s\\\\(\\\\)]+)->((?:', [\n      'Boolean',\n      'Number',\n      'Integer',\n      'Uint32',\n      'Int32'].join('|'), ')Value)\\\\('].join('')]);\n\n/* NAN_WEAK_CALLBACK macro was removed, write out callback definition, key group 1 */\ngroups.push([1, '(NAN_WEAK_CALLBACK)\\\\(([^\\\\s\\\\)]+)\\\\)']);\n\n/* node::ObjectWrap and v8::Persistent have been replaced with Nan implementations, key group 1 */\ngroups.push([1, ['(', [\n  'NanDisposePersistent',\n  'NanObjectWrapHandle'].join('|'), ')\\\\s*\\\\(\\\\s*([^\\\\s\\\\)]+)'].join('')]);\n\n/* Since NanPersistent there is no need for NanMakeWeakPersistent, key group 1 */\ngroups.push([1, '(NanMakeWeakPersistent)\\\\s*\\\\(\\\\s*([^\\\\s,]+)\\\\s*,\\\\s*']);\n\n/* Many methods of v8::Object and others now return v8::MaybeLocal<T>, key group 3 */\ngroups.push([3, ['([\\\\s])([^\\\\s]+)->(', [\n  'GetEndColumn',\n  'GetFunction',\n  'GetLineNumber',\n  'NewInstance',\n  'GetPropertyNames',\n  'GetOwnPropertyNames',\n  'GetSourceLine',\n  'GetStartColumn',\n  'ObjectProtoToString',\n  'ToArrayIndex',\n  'ToDetailString',\n  'CallAsConstructor',\n  'CallAsFunction',\n  'CloneElementAt',\n  'Delete',\n  'ForceSet',\n  'Get',\n  'GetPropertyAttributes',\n  'GetRealNamedProperty',\n  'GetRealNamedPropertyInPrototypeChain',\n  'Has',\n  'HasOwnProperty',\n  'HasRealIndexedProperty',\n  'HasRealNamedCallbackProperty',\n  'HasRealNamedProperty',\n  'Set',\n  'SetAccessor',\n  'SetIndexedPropertyHandler',\n  'SetNamedPropertyHandler',\n  'SetPrototype'].join('|'), ')\\\\('].join('')]);\n\n/* You should get an error if any of these fail anyways,\n   or handle the error better, it is indicated either way, key group 2 */\ngroups.push([2, ['NanNew(<(?:v8\\\\:\\\\:)?(', ['Date', 'String', 'RegExp'].join('|'), ')>)(\\\\([^\\\\)]*\\\\))(?!\\\\.ToLocalChecked\\\\(\\\\))'].join('')]);\n\n/* v8::Value::Equals now returns a v8::Maybe, key group 3 */\ngroups.push([3, '([\\\\s\\\\(\\\\)])([^\\\\s\\\\(\\\\)]+)->(Equals)\\\\(([^\\\\s\\\\)]+)']);\n\n/* NanPersistent makes this unnecessary, key group 1 */\ngroups.push([1, '(NanAssignPersistent)(?:<v8\\\\:\\\\:[^>]+>)?\\\\(([^,]+),\\\\s*']);\n\n/* args has been renamed to info, key group 2 */\ngroups.push([2, '(\\\\W)(args)(\\\\W)'])\n\n/* node::ObjectWrap was replaced with NanObjectWrap, key group 2 */\ngroups.push([2, '(\\\\W)(?:node\\\\:\\\\:)?(ObjectWrap)(\\\\W)']);\n\n/* v8::Persistent was replaced with NanPersistent, key group 2 */\ngroups.push([2, '(\\\\W)(?:v8\\\\:\\\\:)?(Persistent)(\\\\W)']);\n\n/* counts the number of capturing groups in a well-formed regular expression,\n   ignoring non-capturing groups and escaped parentheses */\nfunction groupcount(s) {\n  var positive = s.match(/\\((?!\\?)/g),\n      negative = s.match(/\\\\\\(/g);\n  return (positive ? positive.length : 0) - (negative ? negative.length : 0);\n}\n\n/* compute the absolute position of each key group in the joined master RegExp */\nfor (i = 1, length = groups.length; i < length; i++) {\n\ttotal += groupcount(groups[i - 1][1]);\n\tgroups[i][0] += total;\n}\n\n/* create the master RegExp, whis is the union of all the groups' expressions */\nmaster = new RegExp(groups.map(function (a) { return a[1]; }).join('|'), 'gm');\n\n/* replacement function for String.replace, receives 21 arguments */\nfunction replace() {\n\t/* simple expressions */\n      switch (arguments[groups[0][0]]) {\n        case '_NAN_':\n          return 'NAN_';\n        case 'NODE_SET_METHOD':\n          return 'NanSetMethod';\n        case 'NODE_SET_PROTOTYPE_METHOD':\n          return 'NanSetPrototypeMethod';\n        case 'NanAsciiString':\n          return 'NanUtf8String';\n        case 'NanEscapeScope':\n          return 'scope.Escape';\n        case 'NanReturnNull':\n          return 'info.GetReturnValue().SetNull';\n        case 'NanReturnValue':\n          return 'info.GetReturnValue().Set';\n        case 'NanUcs2String':\n          return 'v8::String::Value';\n        default:\n      }\n\n      /* macros without arguments */\n      switch (arguments[groups[1][0]]) {\n        case 'NanEscapableScope':\n          return 'NanEscapableScope scope'\n        case 'NanReturnUndefined':\n          return 'return';\n        case 'NanScope':\n          return 'NanScope scope';\n        default:\n      }\n\n      /* TryCatch, emulate negative backref */\n      if (arguments[groups[2][0]] === 'TryCatch') {\n        return arguments[groups[2][0] - 1] ? arguments[0] : 'NanTryCatch';\n      }\n\n      /* NanNew(\"foo\") --> NanNew(\"foo\").ToLocalChecked() */\n      if (arguments[groups[3][0]] === 'NanNew') {\n        return [arguments[0], '.ToLocalChecked()'].join('');\n      }\n\n      /* insert warning for removed functions as comment on new line above */\n      switch (arguments[groups[4][0]]) {\n        case 'GetIndexedPropertiesExternalArrayData':\n        case 'GetIndexedPropertiesExternalArrayDataLength':\n        case 'GetIndexedPropertiesExternalArrayDataType':\n        case 'GetIndexedPropertiesPixelData':\n        case 'GetIndexedPropertiesPixelDataLength':\n        case 'HasIndexedPropertiesInExternalArrayData':\n        case 'HasIndexedPropertiesInPixelData':\n        case 'SetIndexedPropertiesToExternalArrayData':\n        case 'SetIndexedPropertiesToPixelData':\n          return arguments[groups[4][0] - 1] ? arguments[0] : [warning1, arguments[0]].join('');\n        default:\n      }\n\n     /* remove unnecessary NanScope() */\n      switch (arguments[groups[5][0]]) {\n        case 'NAN_GETTER':\n        case 'NAN_METHOD':\n        case 'NAN_SETTER':\n        case 'NAN_INDEX_DELETER':\n        case 'NAN_INDEX_ENUMERATOR':\n        case 'NAN_INDEX_GETTER':\n        case 'NAN_INDEX_QUERY':\n        case 'NAN_INDEX_SETTER':\n        case 'NAN_PROPERTY_DELETER':\n        case 'NAN_PROPERTY_ENUMERATOR':\n        case 'NAN_PROPERTY_GETTER':\n        case 'NAN_PROPERTY_QUERY':\n        case 'NAN_PROPERTY_SETTER':\n          return arguments[groups[5][0] - 1];\n        default:\n      }\n\n      /* Value converstion */\n      switch (arguments[groups[6][0]]) {\n        case 'Boolean':\n        case 'Int32':\n        case 'Integer':\n        case 'Number':\n        case 'Object':\n        case 'String':\n        case 'Uint32':\n          return [arguments[groups[6][0] - 2], 'NanTo<v8::', arguments[groups[6][0]], '>(',  arguments[groups[6][0] - 1]].join('');\n        default:\n      }\n\n      /* other value conversion */\n      switch (arguments[groups[7][0]]) {\n        case 'BooleanValue':\n          return [arguments[groups[7][0] - 2], 'NanTo<bool>(', arguments[groups[7][0] - 1]].join('');\n        case 'Int32Value':\n          return [arguments[groups[7][0] - 2], 'NanTo<int32_t>(', arguments[groups[7][0] - 1]].join('');\n        case 'IntegerValue':\n          return [arguments[groups[7][0] - 2], 'NanTo<int64_t>(', arguments[groups[7][0] - 1]].join('');\n        case 'Uint32Value':\n          return [arguments[groups[7][0] - 2], 'NanTo<uint32_t>(', arguments[groups[7][0] - 1]].join('');\n        default:\n      }\n\n      /* NAN_WEAK_CALLBACK */\n      if (arguments[groups[8][0]] === 'NAN_WEAK_CALLBACK') {\n        return ['template<typename T>\\nvoid ',\n          arguments[groups[8][0] + 1], '(const NanWeakCallbackInfo<T> &data)'].join('');\n      }\n\n      /* use methods on NAN classes instead */\n      switch (arguments[groups[9][0]]) {\n        case 'NanDisposePersistent':\n          return [arguments[groups[9][0] + 1], '.Reset('].join('');\n        case 'NanObjectWrapHandle':\n          return [arguments[groups[9][0] + 1], '->handle('].join('');\n        default:\n      }\n\n      /* use method on NanPersistent instead */\n      if (arguments[groups[10][0]] === 'NanMakeWeakPersistent') {\n        return arguments[groups[10][0] + 1] + '.SetWeak(';\n      }\n\n      /* These return Maybes, the upper ones take no arguments */\n      switch (arguments[groups[11][0]]) {\n        case 'GetEndColumn':\n        case 'GetFunction':\n        case 'GetLineNumber':\n        case 'GetOwnPropertyNames':\n        case 'GetPropertyNames':\n        case 'GetSourceLine':\n        case 'GetStartColumn':\n        case 'NewInstance':\n        case 'ObjectProtoToString':\n        case 'ToArrayIndex':\n        case 'ToDetailString':\n          return [arguments[groups[11][0] - 2], 'Nan', arguments[groups[11][0]], '(', arguments[groups[11][0] - 1]].join('');\n        case 'CallAsConstructor':\n        case 'CallAsFunction':\n        case 'CloneElementAt':\n        case 'Delete':\n        case 'ForceSet':\n        case 'Get':\n        case 'GetPropertyAttributes':\n        case 'GetRealNamedProperty':\n        case 'GetRealNamedPropertyInPrototypeChain':\n        case 'Has':\n        case 'HasOwnProperty':\n        case 'HasRealIndexedProperty':\n        case 'HasRealNamedCallbackProperty':\n        case 'HasRealNamedProperty':\n        case 'Set':\n        case 'SetAccessor':\n        case 'SetIndexedPropertyHandler':\n        case 'SetNamedPropertyHandler':\n        case 'SetPrototype':\n          return [arguments[groups[11][0] - 2], 'Nan', arguments[groups[11][0]], '(', arguments[groups[11][0] - 1], ', '].join('');\n        default:\n      }\n\n      /* Automatic ToLocalChecked(), take it or leave it */\n      switch (arguments[groups[12][0]]) {\n        case 'Date':\n        case 'String':\n        case 'RegExp':\n          return ['NanNew', arguments[groups[12][0] - 1], arguments[groups[12][0] + 1], '.ToLocalChecked()'].join('');\n        default:\n      }\n\n      /* NanEquals is now required for uniformity */\n      if (arguments[groups[13][0]] === 'Equals') {\n        return [arguments[groups[13][0] - 1], 'NanEquals(', arguments[groups[13][0] - 1], ', ', arguments[groups[13][0] + 1]].join('');\n      }\n\n      /* use method on replacement class instead */\n      if (arguments[groups[14][0]] === 'NanAssignPersistent') {\n        return [arguments[groups[14][0] + 1], '.Reset('].join('');\n      }\n\n      /* args --> info */\n      if (arguments[groups[15][0]] === 'args') {\n        return [arguments[groups[15][0] - 1], 'info', arguments[groups[15][0] + 1]].join('');\n      }\n\n      /* ObjectWrap --> NanObjectWrap */\n      if (arguments[groups[16][0]] === 'ObjectWrap') {\n        return [arguments[groups[16][0] - 1], 'NanObjectWrap', arguments[groups[16][0] + 1]].join('');\n      }\n\n      /* Persistent --> NanPersistent */\n      if (arguments[groups[17][0]] === 'Persistent') {\n        return [arguments[groups[17][0] - 1], 'NanPersistent', arguments[groups[17][0] + 1]].join('');\n      }\n\n      /* This should not happen. A switch is probably missing a case if it does. */\n      throw 'Unhandled match: ' + arguments[0];\n}\n\n/* reads a file, runs replacement and writes it back */\nfunction processFile(file) {\n  fs.readFile(file, {encoding: 'utf8'}, function (err, data) {\n    if (err) {\n      throw err;\n    }\n\n    /* run replacement twice, might need more runs */\n    fs.writeFile(file, data.replace(master, replace).replace(master, replace), function (err) {\n      if (err) {\n        throw err;\n      }\n    });\n  });\n}\n\n/* process file names from command line and process the identified files */\nfor (i = 2, length = process.argv.length; i < length; i++) {\n  glob(process.argv[i], function (err, matches) {\n    if (err) {\n      throw err;\n    }\n    matches.forEach(processFile);\n  });\n}\n"}